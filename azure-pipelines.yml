name: $(Date:yyyyMMdd)$(Rev:rr)

trigger:
- master

variables:
- group: powershell-gallery

stages:
- stage: test
  displayName: Running tests
  jobs:
  - job: unit_test
    displayName: Unit testing
    pool:
      vmImage: 'ubuntu-latest'
    steps:

    - powershell: .\test.ps1
      displayName: Run unit tests and coverage
      workingDirectory: $(build.sourcesDirectory)

    - task: PublishTestResults@2
      displayName: Publish unit tests results
      inputs:
        testResultsFormat: NUnit
        testResultsFiles: output.xml
        failTaskOnFailedTests: true
      
    - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
      displayName: Generate unit tests coverage report
      inputs:
        reports: $(build.sourcesDirectory)/coverage.xml
        targetdir: $(build.sourcesDirectory)/coverage-report
        reporttypes: 'HtmlInline_AzurePipelines_Dark;HtmlInline_AzurePipelines;Badges'

    - task: PublishCodeCoverageResults@1
      displayName: Publish unit tests coverage report to Azure DevOps
      inputs:
        summaryFileLocation: $(build.sourcesDirectory)/coverage.xml
        pathToSources: $(build.sourcesDirectory)/GsriModpackLib
        reportDirectory: $(build.sourcesDirectory)/coverage-report
        failIfCoverageEmpty: true

    - powershell: .\upload-coverage.ps1
      displayName: Publish unit tests coverage report to Codacy
      workingDirectory: $(build.sourcesDirectory)
      env: {
        CODACY_PROJECT_TOKEN: $(codacy-project-token)
      }
    
- stage: deploy
  displayName: Deployment
  jobs:
  - job: psgallery
    displayName: Publishing to PSGallery
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - powershell: .\publish.ps1
      env: {
        NUGET_API_KEY: $(nuget-api-key)
      }